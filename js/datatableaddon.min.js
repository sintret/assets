function queryParams() {
    let e = JSON.parse(localStorage.getItem(dataTableRoute)), t = {};
    e.columns.forEach(function (a, r) {
        t[e.fields[r]] = a.search.value
    }), t.pageIndex = parseInt(e.start) + 1, t.pageSize = parseInt(e.length);
    let a = e.fields[e.order[0].column];
    return ("no" == a || "actionColumn" == a) && (a = "id"), t.sortField = a, t.sortOrder = e.order[0].dir, jQuery.param(t)
}

window.onerror = function (e, t, a, r, o) {
    return toastr.error(o.message, "Error occurred"), setTimeout(function () {
        toastr.info("Please wait a moment while we are repairing your problem.", "Info"), ajaxPost(`/${dataTableRoute}/reload`, {}, function (e) {
            toastr.info("Please refresh / reload your browser.\n ", "Info")
        })
    }, 2500), setTimeout(function () {
        toastr.clear(), window.location.href = `/${dataTableRoute}`
    }, 4500), !1
}, $("#dataTable thead tr").clone(!0).addClass("filters").appendTo("#dataTable thead");
var table = $("#dataTable").DataTable({
    responsive: !0,
    processing: !0,
    serverSide: !0,
    dom: "Blrftip",
    language: {
        paginate: {
            previous: '<img src="/assets/tiny/arr-left.svg" class="icons-bg-black" >',
            next: '<img src="/assets/tiny/arr-right.svg" class="icons-bg-black" >'
        }
    },
    search: {return: !1},
    ajax: {
        url: `/${dataTableRoute}/list`,
        type: "POST",
        headers: {"CSRF-Token": document.querySelector('meta[name="csrf-token"]').getAttribute("content")},
        data: function (e) {
            e.fields = dataTableFields, localStorage.setItem(dataTableRoute, JSON.stringify(e))
        }
    },
    orderCellsTop: !0,
    fixedHeader: !1,
    order: [[0, "desc"]],
    initComplete: function () {
        let e = this.api();
        e.columns().eq(0).each(function (t) {
            var a = $(".filters th").eq($(e.column(t).header()).index());
            $(a).text(), $(a).html(dataTableFilters[dataTableFields[t]] ? dataTableFilters[dataTableFields[t]] : ""), $(dataTableTypes[dataTableFields[t]], $(".filters th").eq($(e.column(t).header()).index())).off("keyup change").on("keyup change", function (a) {
                a.stopPropagation(), $(this).attr("title", $(this).val()), this.selectionStart;
                let r = $.fn.dataTable.util.escapeRegex($(this).val());
                e.column(t).search(r ? $(this).is("input") ? "%" + r + "%" : r : "", !0, !1).draw()
            })
        })
    }
});
$("body").on("click", ".gridview", function (e) {
    e.stopPropagation(), location.href = `/${dataTableRoute}/view/` + $(this).data("id")
}), $("body").on("click", ".gridupdate", function (e) {
    e.stopPropagation(), location.href = `/${dataTableRoute}/update/` + $(this).data("id")
}), $("body").on("click", ".griddelete", function (e) {
    e.stopPropagation(), window.confirm("sure to delete") && ajaxDelete(`/${dataTableRoute}/delete/`, {id: $(this).data("id")}, function (e) {
        toastrForm(e), 1 == e.status && (location.href = "")
    })
}), $("body").on("click", ".gridapproval", function (e) {
    e.stopPropagation(), location.href = `/${dataTableRoute}/approval/` + $(this).data("id")
}), $("body").on("click", ".gridadd", function (e) {
    e.stopPropagation(), location.href = `/${dataTableRoute}/create`
}), $(".export-parsing").on("click", function (e) {
    e.stopPropagation(), location.href = `/${dataTableRoute}/excel-query?zraws=1&${queryParams()}`
}), $("body").on("click", ".gridexcel", function (e) {
    e.stopPropagation(), location.href = `/${dataTableRoute}/excel-query?${queryParams()}`
}), $(".export-xls").on("click", function (e) {
    e.stopPropagation(), location.href = `/${dataTableRoute}/excel?${queryParams()}`
}), $(".export-search-prety").on("click", function (e) {
    e.stopPropagation(), location.href = `/${dataTableRoute}/excel-query?zraws=0&zsearch=1&all=0&${queryParams()}`
}), $(".export-search-raw").on("click", function (e) {
    e.stopPropagation(), location.href = `/${dataTableRoute}/excel-query?ztype=0&zraws=1&zsearch=1&all=0&${queryParams()}`
}), $(".export-all-prety").on("click", function (e) {
    e.stopPropagation(), location.href = `/${dataTableRoute}/excel-query?ztype=0&zraws=0&zsearch=0&all=1&${queryParams()}`
}), $(".export-all-raw").on("click", function (e) {
    e.stopPropagation(), location.href = `/${dataTableRoute}/excel-query?ztype=0&zraws=1&zsearch=0&all=1&${queryParams()}`
}), $(".export-pdf").on("click", function (e) {
    e.stopPropagation(), toastr.info("Downloading.."), location.href = `/${dataTableRoute}/excel-query?ztype=1&zraws=0&zsearch=0&all=0&${queryParams()}`
}), $(".export-all-pdf").on("click", function (e) {
    e.stopPropagation(), toastr.info("Sedang mengunduh.."), location.href = `/${dataTableRoute}/excel-query?ztype=1&zraws=0&zsearch=0&all=1&${queryParams()}`
}), $(".export-standart").on("click", function (e) {
    e.stopPropagation(), location.href = `/${dataTableRoute}/excel-query?zstandart=1&zraws=0&zsearch=0&all=0&${queryParams()}`
}), $(".export-standart-all").on("click", function (e) {
    e.stopPropagation(), location.href = `/${dataTableRoute}/excel-query?zstandart=1&zraws=0&zsearch=0&all=1&${queryParams()}`
}), $("body").on("click", ".myreport-grid", function (e) {
    e.stopPropagation(), toastr.info("Downloading...");
    let t = $(this).data("id");
    location.href = `/myreport/${t}`
}), $("body").on("click", ".gridimport", function (e) {
    e.stopPropagation(), location.href = `/${dataTableRoute}/import`
}), $("body").on("click", ".gridreload", function (e) {
    e.preventDefault(), ajaxPost(`/${dataTableRoute}/reload`, {}, function (e) {
        location.href = `/${dataTableRoute}`
    })
}), $("body").on("click", ".gridprint", function (e) {
    e.preventDefault(), window.open("/print_za/" + $(this).data("token"), "_blank")
}), $("ul.gridsortable").sortable({
    group: "gridsortable", isValidTarget: function (e, t) {
        return !e.is(".disabled")
    }, onDrop: function (e, t, a) {
        let r = e.parents().attr("id");
        "gridleft" == r ? (e.find("span").addClass("fa-eye").removeClass("fa-eye-slash"), e.find("img").attr("src", "/assets/icons/eye.svg")) : e.find("img").attr("src", "/assets/icons/eye-off.svg"), a(e, t)
    }
}), $(".grid-submit").on("click", function () {
    let e = [];
    $("#gridleft li").each(function (t) {
        let a = $(this).attr("data-name");
        a && e.push(a)
    }), $("#serialize_left").val(JSON.stringify(e));
    let t = [];
    $("#gridright li").each(function (e) {
        let a = $(this).attr("data-name");
        a && t.push(a)
    }), $("#serialize_right").val(JSON.stringify(t)), $("#form-grid").submit()
}), $(".grid-reset").on("click", function () {
    ajaxDelete(`/${dataTableRoute}/grid`, {}, function (e) {
        0 == e.status ? toastr.error(e.message, e.title) : ($("#jsGrid").jsGrid("loadData"), toastr.success(e.message, e.title)), location.href = ""
    })
}), submitForm("form-grid", "", `/${dataTableRoute}`), $("input[name='_csrf']").val(document.querySelector('meta[name="csrf-token"]').getAttribute("content")), $("#dataTable_filter").hide(), $(function () {
    window.matchMedia("(max-width: 450px)").matches ? $("#dataTable>thead>tr").eq(1).hide() : $("#dataTable>thead>tr").eq(1).show()
});
